{
  "openapi": "3.1.0",
  "info": {
    "title": "Paxos Webhooks",
    "version": "2025-09-22",
    "description": "Webhooks allow you to register endpoints to receive asynchronous events from the Paxos Platform. These webhooks are triggered when specific events occur in the system, enabling real-time notifications for your application.\n\n**Important**: Webhook payloads contain only the event metadata. To retrieve the full event object details, use the [Get Event](/api-reference/preview/2025-09-22/events/get-event) REST API endpoint with the event ID from the webhook payload."
  },
  "paths": {
    "/events/{id}": {
      "get": {
        "summary": "Get Event",
        "description": "Get an Event by its (event) id, the event must have been created by the system and you must be the owner of the\nthe event, you can get an event id by either listing events or via a webhook integration.",
        "operationId": "GetEvent",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                },
                "example": {
                  "id": "d99a03ee-6b88-4362-89da-087c2c8cd4a7",
                  "type": "identity.disabled",
                  "object_type": "identity_status_change",
                  "object": {
                    "id": "d840cf31-352f-4190-a476-7522bf3eafda",
                    "identity_id": "4fd025ab-f29f-47e6-a02e-df90a61c7ec9",
                    "old_status": "PENDING",
                    "new_status": "DISABLED",
                    "status_details": {
                      "active_controls": [
                        {
                          "id": "59b8e3c5-2b6e-4fa6-afcf-8c685598241d",
                          "type": "CLOSED",
                          "controlled_by": "CLIENT",
                          "reason_code": "END_USER_REQUESTED",
                          "reason": "some client-set reason",
                          "created_at": "2006-01-02T15:04:05Z"
                        },
                        {
                          "id": "5f1eb60c-b292-482c-96fe-9e3e265abcd4",
                          "type": "CLOSED",
                          "controlled_by": "PAXOS",
                          "reason_code": "OTHER",
                          "reason": "some admin-set reason",
                          "created_at": "2006-01-02T15:04:05Z"
                        }
                      ],
                      "pending_requirements": [
                        {
                          "type": "ID_VERIFICATION",
                          "message": "Pending ID Verification"
                        },
                        {
                          "type": "SANCTIONS_SCREENING",
                          "message": "Pending Sanctions Screening"
                        },
                        {
                          "type": "ADDITIONAL_SCREENING",
                          "message": "Pending PEP/Adverse Media Screening"
                        },
                        {
                          "type": "MEMBERS",
                          "message": "Pending members",
                          "metadata": {
                            "f190b163-208f-4d73-8deb-000000000001": "PENDING"
                          }
                        }
                      ],
                      "failed_requirements": [
                        {
                          "type": "ENHANCED_DUE_DILIGENCE",
                          "message": "Failed Enhanced Due Diligence checks"
                        },
                        {
                          "type": "RISK_AWARENESS_ASSESSMENT",
                          "message": "Failed Risk Awareness Assessment"
                        },
                        {
                          "type": "DISABLED_MEMBERS",
                          "message": "Disabled members",
                          "metadata": {
                            "f190b163-208f-4d73-8deb-000000000002": "DISABLED"
                          }
                        },
                        {
                          "type": "RISK_RATING",
                          "message": "Jurisdiction not supported by Paxos"
                        }
                      ]
                    }
                  },
                  "created_at": "2023-08-25T14:25:41.648489333Z",
                  "undelivered_webhooks": 12
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                },
                "examples": {
                  "Bad event id": {
                    "value": {
                      "type": "about:blank",
                      "title": "Bad Request",
                      "status": 400,
                      "detail": "error parsing event id"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Insufficient scopes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                },
                "examples": {
                  "Insufficient scopes": {
                    "value": {
                      "type": "about:blank",
                      "title": "Forbidden",
                      "status": 403,
                      "detail": "insufficient scopes: found 'identity:read_identity', required one of '[event:read_event]'"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Problem"
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "title": "Not Found",
                      "type": "about:blank"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "The unique `id` in the `Event` object.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Events"
        ],
        "security": [
          {
            "OAuth2": [
              "events:read_event"
            ]
          }
        ]
      }
    }
  },
  "webhooks": {
    "identity.approved": {
      "post": {
        "requestBody": {
          "description": "Webhook payload containing event metadata. Use the event ID with the Get Event API to retrieve full details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookEvent"
              },
              "example": {
                "id": "bd019f1c-89a7-4372-9d21-eaad9280dc41",
                "type": "identity.approved",
                "source": "com.paxos",
                "time": "2025-01-07T14:30:02Z",
                "object": "event"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook successfully received"
          }
        },
        "summary": "Identity Approved",
        "description": "Triggered when an identity verification process is approved. Your endpoint should respond with a 2xx status code to acknowledge receipt. Use the event ID to call the Get Event API for full details."
      }
    },
    "identity.denied": {
      "post": {
        "requestBody": {
          "description": "Webhook payload containing event metadata. Use the event ID with the Get Event API to retrieve full details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookEvent"
              },
              "example": {
                "id": "bd019f1c-89a7-4372-9d21-eaad9280dc41",
                "type": "identity.denied",
                "source": "com.paxos",
                "time": "2025-01-07T14:30:02Z",
                "object": "event"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook successfully received"
          }
        },
        "summary": "Identity Denied",
        "description": "Triggered when an identity verification process is denied. Your endpoint should respond with a 2xx status code to acknowledge receipt. Use the event ID to call the Get Event API for full details."
      }
    },
    "identity.disabled": {
      "post": {
        "requestBody": {
          "description": "Webhook payload containing event metadata. Use the event ID with the Get Event API to retrieve full details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookEvent"
              },
              "example": {
                "id": "bd019f1c-89a7-4372-9d21-eaad9280dc41",
                "type": "identity.disabled",
                "source": "com.paxos",
                "time": "2025-01-07T14:30:02Z",
                "object": "event"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook successfully received"
          }
        },
        "summary": "Identity Disabled",
        "description": "Triggered when an identity is disabled. Your endpoint should respond with a 2xx status code to acknowledge receipt. Use the event ID to call the Get Event API for full details."
      }
    }
  },
  "components": {
    "schemas": {
      "Event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The event identifier used to query or refer to a specific event"
          },
          "type": {
            "type": "string",
            "description": "The type of event representing an action in the system"
          },
          "object_type": {
            "type": "string",
            "description": "The type of the `object` associated with the event"
          },
          "object": {
            "type": "object",
            "description": "The structured payload of type `object_type` associated with the event"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp when the event was first created, RFC3339 format, like `YYYY-MM-DDTHH:MM:SS.sssZ`."
          },
          "undelivered_webhooks": {
            "type": "integer",
            "format": "int32",
            "description": "The number of undelivered webhooks"
          }
        }
      },
      "WebhookEvent": {
        "type": "object",
        "title": "Webhook Event",
        "description": "The webhook payload structure sent to your endpoint",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Event ID",
            "description": "The event identifier used to query the Events API for full details"
          },
          "type": {
            "type": "string",
            "title": "Event Type",
            "description": "The type of event that occurred",
            "enum": [
              "identity.documents_required",
              "identity.approved",
              "identity.denied",
              "identity.disabled",
              "identity.kyc_refresh.started",
              "identity.kyc_refresh.completed",
              "identity.kyc_refresh.expired",
              "transfer.crypto_deposit.pending",
              "transfer.crypto_deposit.completed",
              "transfer.crypto_deposit.failed",
              "transfer.crypto_withdrawal.pending",
              "transfer.crypto_withdrawal.completed",
              "transfer.crypto_withdrawal.failed",
              "transfer.act_deposit.pending",
              "transfer.act_deposit.completed",
              "transfer.act_deposit.failed",
              "transfer.act_withdrawal.pending",
              "transfer.act_withdrawal.completed",
              "transfer.act_withdrawal.failed"
            ]
          },
          "source": {
            "type": "string",
            "enum": ["com.paxos"],
            "title": "Source",
            "description": "Always 'com.paxos'"
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "When the event occurred, RFC3339 format"
          },
          "object": {
            "type": "string",
            "enum": ["event"],
            "title": "Object Type",
            "description": "Always 'event'"
          }
        },
        "required": ["id", "type", "source", "time", "object"],
        "example": {
          "id": "bd019f1c-89a7-4372-9d21-eaad9280dc41",
          "type": "identity.approved",
          "source": "com.paxos",
          "time": "2025-01-07T14:30:02Z",
          "object": "event"
        }
      },
      "IdentityStatusChangeObject": {
        "type": "object",
        "title": "Identity Status Change Object",
        "description": "Object returned by Get Event API for identity status change events",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Object ID",
            "description": "Unique identifier for this event object"
          },
          "identity_id": {
            "type": "string",
            "format": "uuid",
            "title": "Identity ID",
            "description": "Identifier for the affected identity"
          },
          "old_status": {
            "type": "string",
            "enum": ["PENDING", "ERROR", "APPROVED", "DENIED", "DISABLED"],
            "title": "Previous Status",
            "description": "The previous status of the identity"
          },
          "new_status": {
            "type": "string",
            "enum": ["PENDING", "ERROR", "APPROVED", "DENIED", "DISABLED"],
            "title": "New Status",
            "description": "The new status of the identity"
          },
          "status_details": {
            "type": "object",
            "title": "Status Details",
            "description": "Detailed info about the new status of the identity"
          }
        },
        "required": ["id", "identity_id", "old_status", "new_status"],
        "example": {
          "id": "d840cf31-352f-4190-a476-7522bf3eafda",
          "identity_id": "4fd025ab-f29f-47e6-a02e-df90a61c7ec9",
          "old_status": "PENDING",
          "new_status": "DISABLED",
          "status_details": {
            "active_controls": [
              {
                "id": "59b8e3c5-2b6e-4fa6-afcf-8c685598241d",
                "type": "CLOSED",
                "controlled_by": "CLIENT",
                "reason_code": "END_USER_REQUESTED",
                "reason": "some client-set reason",
                "created_at": "2006-01-02T15:04:05Z"
              },
              {
                "id": "5f1eb60c-b292-482c-96fe-9e3e265abcd4",
                "type": "CLOSED",
                "controlled_by": "PAXOS",
                "reason_code": "OTHER",
                "reason": "some admin-set reason",
                "created_at": "2006-01-02T15:04:05Z"
              }
            ],
            "pending_requirements": [
              {
                "type": "ID_VERIFICATION",
                "message": "Pending ID Verification"
              },
              {
                "type": "SANCTIONS_SCREENING",
                "message": "Pending Sanctions Screening"
              },
              {
                "type": "ADDITIONAL_SCREENING",
                "message": "Pending PEP/Adverse Media Screening"
              },
              {
                "type": "MEMBERS",
                "message": "Pending members",
                "metadata": {
                  "f190b163-208f-4d73-8deb-000000000001": "PENDING"
                }
              }
            ],
            "failed_requirements": [
              {
                "type": "ENHANCED_DUE_DILIGENCE",
                "message": "Failed Enhanced Due Diligence checks"
              },
              {
                "type": "RISK_AWARENESS_ASSESSMENT",
                "message": "Failed Risk Awareness Assessment"
              },
              {
                "type": "DISABLED_MEMBERS",
                "message": "Disabled members",
                "metadata": {
                  "f190b163-208f-4d73-8deb-000000000002": "DISABLED"
                }
              },
              {
                "type": "RISK_RATING",
                "message": "Jurisdiction not supported by Paxos"
              }
            ]
          }
        }
      },
      "Problem": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "format": "uri",
            "description": "An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n",
            "default": "about:blank",
            "example": "https://api.paxos.com/v2/problems/insufficient_funds"
          },
          "title": {
            "type": "string",
            "description": "A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n",
            "example": "Insufficient Funds"
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "description": "The HTTP status code generated by the origin server for this occurrence\nof the problem.\n",
            "minimum": 100,
            "maximum": 600,
            "exclusiveMaximum": true,
            "example": 403
          },
          "detail": {
            "type": "string",
            "description": "A human readable explanation specific to this occurrence of the\nproblem.\n",
            "example": "Not enough funds in account."
          },
          "meta": {
            "type": "object",
            "description": "Additional structured metadata about the error.\n"
          }
        }
      }
    }
  }
}